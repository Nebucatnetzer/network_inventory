on:
  push:
    branches: [master]

env:
  IMAGE_NAME: network-inventory

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
      - uses: cachix/cachix-action@v12
        with:
          name: networkinventory
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Test
        run: |
          nix flake check -L -j auto

  publish:
    # Ensure test job passes before pushing image.
    needs: tests

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v18
      - uses: cachix/cachix-action@v12
        with:
          name: networkinventory
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Buid container
        run: |
          nix build .#container
          docker load < result

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
